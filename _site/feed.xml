<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2021-06-11T08:00:47-04:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Your awesome title</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</subtitle><entry><title type="html">Welcome to Jekyll!</title><link href="http://localhost:4000/jekyll/update/2021/06/10/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2021-06-10T21:55:56-04:00</published><updated>2021-06-10T21:55:56-04:00</updated><id>http://localhost:4000/jekyll/update/2021/06/10/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2021/06/10/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry><entry><title type="html">Integrating Computation throughout our physics curriculum</title><link href="http://localhost:4000/physics/computation/python/julia/2021/06/10/Computation.html" rel="alternate" type="text/html" title="Integrating Computation throughout our physics curriculum" /><published>2021-06-10T12:35:00-04:00</published><updated>2021-06-10T12:35:00-04:00</updated><id>http://localhost:4000/physics/computation/python/julia/2021/06/10/Computation</id><content type="html" xml:base="http://localhost:4000/physics/computation/python/julia/2021/06/10/Computation.html">&lt;p&gt;This summer and fall, I will be writing computational physics problem set questions in the form of Jupyter Notebooks. 
This is in support of a Maine Space Grant I received to help integrate computing throughout our University of Southern Maine 
physics curriculum.&lt;/p&gt;

&lt;p&gt;For more than a hundred years, physics students have primarily learned physics by being handed weekly analytical paper and pen questions.&lt;br /&gt;
But this is an extreme limitation to the types of problems which can be solved, and with computing now readily available, it makes sense to integrate computational problems into this mix.&lt;/p&gt;

&lt;p&gt;Doing so allows one to&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;solve problems that do not admit analytic solutions&lt;/li&gt;
  &lt;li&gt;easily integrate visual simulations&lt;/li&gt;
  &lt;li&gt;build physical intuition by real time interaction with solutions&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;My work will involve creating problems for &lt;em&gt;all&lt;/em&gt; our upper level physics courses. I will organize these 
questions by course (as most physics departments have similar course requirement for B.S. in Physics), and
will make the questions freely available as Jupyter notebooks in both Julia (my new favorite language) and Python.&lt;/p&gt;

&lt;p&gt;Look for more info here as I create content. I will also make solutions available to faculty from other institutions,
and will (once I figure out how to manage this) welcome question additions.&lt;/p&gt;</content><author><name></name></author><category term="physics" /><category term="computation" /><category term="python" /><category term="julia" /><summary type="html">This summer and fall, I will be writing computational physics problem set questions in the form of Jupyter Notebooks. This is in support of a Maine Space Grant I received to help integrate computing throughout our University of Southern Maine physics curriculum.</summary></entry></feed>